openapi: 3.0.1
info:
  title: ESUS API
  description: esus-api for crud operations
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:10024/api/v1
tags:
  - name: education-periods
    description: Управление учебными периодами
  - name: admission-orders
    description: Управление приказами о зачислении
  - name: educational-departments
    description: Управление учебными отделениями
  - name: teachers
    description: Управление преподавателями
  - name: curriculums
    description: Управление учебными планами
  - name: curriculum-disciplines
    description: Управление дисциплинами учебного плана
  - name: disciplines
    description: Управление всеми учебными дисциплинами
  - name: groups
    description: Управление учебными группами
paths:
  /login/vk:
    get:
      tags:
        - login
      summary: Login with VK Launch Params
      responses:
        200:
          description: return JWT Access Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JwtLoginResponse"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-codegen-request-body-name: body
    post:
      tags:
        - login
      summary: Authorization by Login And Password
      requestBody:
        required: true
        description: "login and password"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginBody"
      responses:
        200:
          description: On Successfull Authorization Set Cookie
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginPasswordResponse"
          headers:
            Set-Cookie:
              schema:
                type: string
                example: session_id=<UUID>; HttpOnly; Secure
        400:
          description: "wrong password or user with login not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-codegen-request-body-name: body
  /group/all:
    get:
      tags:
        - groups
      summary: Get Group Data
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ID32"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /user/{id}:
    get:
      tags:
        - teachers
      summary: Get All users who are teachers with pagination
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ID32"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeacherData"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
